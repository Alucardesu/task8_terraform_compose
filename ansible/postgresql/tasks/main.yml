---
- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/etc/postgresql/12/main/pg_hba.conf"
  register: postgres_data

- name: "Initialize PostgreSQL"
  shell: "postgresql-setup initdb"
  when: not postgres_data.stat.exists

- name: "Start and enable services"
  service: 
    name: "{{ item }}"
    state: started 
    enabled: yes
  loop:
    - postgresql

- name: "Create app database"
  postgresql_db:
    state: present
    name: "{{ db_name }}"
  become: yes
  become_user: postgres

- name: "Create db user"
  postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  become: yes
  become_user: postgres

- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: no
    privs: all
  become: yes
  become_user: postgres

- name: "Allow md5 connection for the db user"
  postgresql_pg_hba:
    dest: "/etc/postgresql/12/main/pg_hba.conf"
    address: "{{ item.address }}"
    contype: "{{ item.contype }}"
    databases: "{{ db_name }}"
    method: "{{ item.method }}"
    users: "{{ db_user }}"
    create: true
  with_items: 
    - { contype: host, method: md5, address: all } 
  become: yes
  become_user: postgres
  register: restart_postgres

- name: "Open postgresql to listeners"
  postgresql_set:
    name: listen_addresses
    value: "*"
  become: yes
  become_user: postgres
  register: restart_postgres

- name: "Force restart"
  service: 
    name: postgresql 
    state: restarted
  when: restart_postgres.changed

- name: "Set up database script"
  template:
    src: "files/createdbinfo.sql.j2"
    dest: "/tmp/createdbinfo.sql"

- name: "Run script"
  become: true
  become_user: postgres
  shell: psql {{ db_name }} < /tmp/createdbinfo.sql

#    - name: "Simple SELECT query"
#      postgresql_query:
#        db: "{{ db_name }}"
#        login_user: "{{ db_user }}"
#        login_password: "{{ db_password }}"
#        query: SELECT version()
