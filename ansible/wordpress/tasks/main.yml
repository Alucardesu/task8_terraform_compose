---
- name: "Find out if WordPress is installed"
  ansible.builtin.stat:
    path: "{{ http_workdir }}"
  register: wordpress
  tags: [ wordpress ]  

- name: "Download latest WordPress"
  command: "wp core download --path={{ http_workdir }} --allow-root"  
  when: not wordpress.stat.exists
  tags: [ wordpress ]

- name: "Find out if PG4WP is installed"
  ansible.builtin.stat:
    path: "/srv/pg4wp"
  register: pg4wp
  tags: [ wordpress ]  

- name: "Get PG4WP" 
  ansible.builtin.git:
    repo: https://github.com/kevinoid/postgresql-for-wordpress.git
    dest: "/srv/"
    force: yes
    clone: yes
  when: not pg4wp.stat.exists
  tags: [ wordpress ]  

- name: "Copy PG4WP"
  copy: 
    src: "/srv/pg4wp/"
    dest: "{{ http_workdir }}/wp-content/pg4wp/"
    remote_src: yes
  tags: [ wordpress ]

- name: Copy db.php
  copy:
    src: "/srv/pg4wp/db.php"
    dest: "{{ http_workdir }}/wp-content/db.php"
    remote_src: yes
  tags: [ wordpress ]  

- name: "Set up wordpress config"
  template:
    src: "wp-config.php.j2"
    dest: "{{ http_workdir }}/wp-config.php"
  tags: [ wordpress ]  

- name: "Add .htaccess"
  copy:
    src: ".htaccess"
    dest: "{{ http_workdir }}/"
  tags: [ wordpress ]  

- name: "Initialize WordPress"
  command: wp core install --title="{{ wp_proyect }}" --url="{{ wp_URL }}" --admin_user="{{ wp_admin_user }}" --admin_email="{{ wp_admin_email }}" --admin_password={{ wp_admin_password }} --allow-root
  args:
    chdir: "{{ http_workdir }}"
  tags: [ wordpress ]

- name: Set ownership
  file:
    path: "/var/www/html/"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  tags: [ wordpress ]

- name: Set permissions for directories
  shell: "/usr/bin/find {{ http_workdir }} -type d -exec chmod 750 {} \\;"
  tags: [ wordpress ]

- name: Set permissions for files
  shell: "/usr/bin/find {{ http_workdir }} -type f -exec chmod 640 {} \\;"
  tags: [ wordpress ]


